plugins {
	id 'java'
	id 'maven-publish'
	id 'idea'
	id 'eclipse'
	id 'fabric-loom' version '0.2.7-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = project.archive_name
version = project.mod_version
group = project.maven_group

def ENV = System.getenv()
version = version + "+" + (ENV.BUILD_NUMBER ? ("build." + ENV.BUILD_NUMBER) : "custom")

minecraft {
	accessWidener = file("src/main/resources/assembly.accesswidener")
}

repositories {
    mavenLocal()
	maven {
		name = "LibCD"
		url 'http://server.bbkr.space:8081/artifactory/libs-release'
	}
	maven {
		name = "BuildCraft"
		url = "https://mod-buildcraft.com/maven"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:terraform:${project.terraform_version}"
	modImplementation "alexiil.mc.lib:libblockattributes-fluids:${project.lba_version}"
	modImplementation "com.terraformersmc:dossier:${project.dossier_version}"
	modImplementation "RebornCore:RebornCore-${project.rc_version}"

	include "com.terraformersmc:terraform:${project.terraform_version}"
	include "alexiil.mc.lib:libblockattributes-fluids:${project.lba_version}"
	include "RebornCore:RebornCore-${project.rc_version}"

	optionalDependency "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"
	optionalDependency "io.github.cottonmc:LibCD:${project.libcd_version}"

	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

def optionalDependency(String dep) {
	dependencies.modRuntime(dep) {
		exclude group: "net.fabricmc"
		exclude module: "nbt-crafting"
	}
	dependencies.modCompileOnly(dep) {
		exclude group: "net.fabricmc"
		exclude module: "nbt-crafting"
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		if (project.hasProperty('mavenPass')) {
			maven {
				url = "http://mavenupload.modmuss50.me/"
				credentials {
					username = "buildslave"
					password = project.getProperty('mavenPass')
				}
			}
		}
	}
}
